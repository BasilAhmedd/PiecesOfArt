// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PiecesArt;

#nullable disable

namespace PiecesArt.Migrations
{
    [DbContext(typeof(PiecesOfArtContext))]
    [Migration("20241024202650_data")]
    partial class data
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PiecesArt.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "A 19th-century art movement...",
                            Name = "Impressionism"
                        },
                        new
                        {
                            Id = 2,
                            Description = "A period in European history...",
                            Name = "Renaissance"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Art that uses shapes, colors...",
                            Name = "Abstract"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Artistic work from late 19th to mid-20th century...",
                            Name = "Modern"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Art from ancient civilizations...",
                            Name = "Ancient"
                        });
                });

            modelBuilder.Entity("PiecesArt.Models.LoyaltyCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoyaltyCards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "10% Off",
                            Name = "Bronze"
                        },
                        new
                        {
                            Id = 2,
                            Description = "20% Off",
                            Name = "Silver"
                        },
                        new
                        {
                            Id = 3,
                            Description = "30% Off",
                            Name = "Gold"
                        },
                        new
                        {
                            Id = 4,
                            Description = "40% Off",
                            Name = "Platinum"
                        },
                        new
                        {
                            Id = 5,
                            Description = "50% Off",
                            Name = "Crystal"
                        });
                });

            modelBuilder.Entity("PiecesArt.Models.PieceOfArt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UsersId");

                    b.ToTable("PiecesOfArt");
                });

            modelBuilder.Entity("PiecesArt.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoyaltyCardId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LoyaltyCardId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PiecesArt.Models.PieceOfArt", b =>
                {
                    b.HasOne("PiecesArt.Models.Category", "Category")
                        .WithMany("PiecesOfArt")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PiecesArt.Models.Users", null)
                        .WithMany("PiecesOfArt")
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Category");
                });

            modelBuilder.Entity("PiecesArt.Models.Users", b =>
                {
                    b.HasOne("PiecesArt.Models.LoyaltyCard", "LoyaltyCard")
                        .WithMany("Users")
                        .HasForeignKey("LoyaltyCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoyaltyCard");
                });

            modelBuilder.Entity("PiecesArt.Models.Category", b =>
                {
                    b.Navigation("PiecesOfArt");
                });

            modelBuilder.Entity("PiecesArt.Models.LoyaltyCard", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("PiecesArt.Models.Users", b =>
                {
                    b.Navigation("PiecesOfArt");
                });
#pragma warning restore 612, 618
        }
    }
}
